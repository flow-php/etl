{
    "name": "flow-php/etl",
    "type": "library",
    "description": "PHP ETL - Extract Transform Load - Abstraction",
    "keywords": ["etl", "extract", "transform", "load"],
    "prefer-stable": true,
    "require": {
        "php": "~8.1",
        "ext-mbstring": "*",
        "ext-json": "*",
        "psr/log": "^1.1",
        "psr/http-client": "^1.0"
    },
    "require-dev": {
        "ext-xmlreader": "*",
        "ext-dom": "*",
        "flow-php/doctrine-dbal-bulk": "^1.0@dev",
        "flow-php/array-dot": "^1.0@dev",
        "league/flysystem": "^3.0",
        "league/flysystem-aws-s3-v3": "^3.0",
        "league/flysystem-azure-blob-storage": "^3.0",
        "codename/parquet": "^0.6.2",
        "elasticsearch/elasticsearch": "^7.6",
        "flix-tech/avro-php": "^4.2",
        "halaxa/json-machine": "^0.8.0 || ^1.0.0",
        "laminas/laminas-hydrator": "^4.0",
        "jawira/case-converter": "^3.4",
        "php-http/curl-client": "^2.2",
        "nyholm/psr7": "^1.4",
        "laravel/serializable-closure": "^1.1",
        "symfony/validator": "^5.3 || ^6.0"
    },
    "config": {
        "optimize-autoloader": true,
        "sort-packages": true
    },
    "suggest": {
        "flow-php/etl-adapter-amphp": "Process data asynchronously using PHPAmp library",
        "flow-php/etl-adapter-reactphp": "Process data asynchronously using ReactPHP library",
        "flow-php/array-dot": "Read/Write data from/in PHP arrays throug dot notation",
        "flow-php/doctrine-dbal-bulk": "Read/Write data from/IN Databases",
        "league/flysystem": "Read/Write data from/in remote filesystems",
        "league/flysystem-aws-s3-v3": "Read/Write data from/in AWS S3",
        "league/flysystem-azure-blob-storage": "Read/Write data from/in Azure Blob Storage",
        "codename/parquet": "Read/Write data from/in parquet files",
        "elasticsearch/elasticsearch" : "Read/Write data from/in elasticsearch",
        "flix-tech/avro-php": "Read/Write data from/in avro files",
        "halaxa/json-machine" : "Read/Write data from/in json files",
        "psr/http-client-implementation": "Read/Write data from URL's",
        "psr/log-implementation": "Write data into logs",
        "laminas/laminas-hydrator" : "Converting ObjectEntry into ArrayEntry",
        "ocramius/generated-hydrator" : "Converting ObjectEntry into ArrayEntry",
        "jawira/case-converter" : "Converting strings into different styles, snake case, camel case, etc",
        "laravel/serializable-closure": "Closures serialization",
        "symfony/validator": "Additional conditions for conditional transformations"
    },
    "conflict": {
        "league/flysystem": "<3.0",
        "league/flysystem-aws-s3-v3": "<3.0",
        "league/flysystem-azure-blob-storage": "<3.0",
        "codename/parquet": "<0.6.2",
        "elasticsearch/elasticsearch": "<7.6",
        "flix-tech/avro-php": "<4.2",
        "halaxa/json-machine": "<0.8.0",
        "laminas/laminas-hydrator": "<4.0",
        "jawira/case-converter": "<3.4",
        "php-http/curl-client": "<2.2",
        "nyholm/psr7": "<1.4",
        "laravel/serializable-closure": "<1.1",
        "symfony/validator": "<5.3"
    },
    "license": "MIT",
    "autoload": {
        "psr-4": {
            "Flow\\": [
                "src/Flow"
            ]
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Flow\\": "tests/Flow"
        }
    },
    "scripts": {
        "build": [
            "@static:analyze",
            "@test",
            "@test:mutation"
        ],
        "test": [
            "tools/vendor/bin/phpunit"
        ],
        "test:mutation": [
            "tools/vendor/bin/infection -j2"
        ],
        "static:analyze": [
            "tools/vendor/bin/psalm --output-format=compact",
            "tools/vendor/bin/phpstan analyze -c phpstan.neon",
            "tools/vendor/bin/php-cs-fixer fix --dry-run"
        ],
        "cs:php:fix": "tools/vendor/bin/php-cs-fixer fix",
        "tools:install": "composer install --working-dir=./tools",
        "post-install-cmd": [
            "@tools:install"
        ],
        "post-update-cmd": [
            "@tools:install"
        ]
    }
}
